/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Visao;

import Controle.ImagemJar;
import Controle.CRUD;
import Modelo.Clientes;
import Modelo.Compras;
import Modelo.Funcionarios;
import Modelo.Itens_Produtos;
import Modelo.Mesas;
import Modelo.Produtos;
import Modelo.Usuarios;
import static Visao.MenuPrincipal.lbData;
import static Visao.MenuPrincipal.lbUsuario;
import static Visao.MenuPrincipal.panelComponentes;
import com.mysql.jdbc.Connection;
import java.awt.Color;
import java.awt.Image;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.IOException;
import java.io.InputStream;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Rodrigues
 */
public class PainelVenda extends javax.swing.JPanel {

    CRUD obc = new CRUD();
    DefaultTableModel modelo = new DefaultTableModel(new String[]{"ID", "Descrição", "Preco"}, 0);
    DefaultTableModel modeloPedido = new DefaultTableModel(new String[]{"Qtd", "Descrição", "Preco"}, 0);
    private NumberFormat f = NumberFormat.getCurrencyInstance(new Locale("Portuguese", "MZ"));
    private String codigo = "00000";
    ImagemJar ij = new ImagemJar();

    public PainelVenda() {
        initComponents();
        chamaTodosMetodos();
        jtVendedor.setText(retornaVendedor(obc.buscaUtilizador(),lbUsuario.getText())); 
        jtMesa.setText("Sem Descrição");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        panelTitulo = new javax.swing.JPanel();
        lbTitulo = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jtCliente = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        btCliente = new javax.swing.JButton();
        lbMesa = new javax.swing.JLabel();
        jtNPedido = new javax.swing.JTextField();
        jtMesa = new javax.swing.JTextField();
        jtVendedor = new javax.swing.JTextField();
        lbMesa1 = new javax.swing.JLabel();
        panelProdutos = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jtPesquisar = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jtQtd = new javax.swing.JSpinner();
        btRegistarPedido = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaVenda = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jtPrecoTotal = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        btGravarPedido = new javax.swing.JButton();
        btCalculadora = new javax.swing.JButton();
        btVoltar = new javax.swing.JButton();
        btRemoverPedido = new javax.swing.JButton();
        btRemoverTodos = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        lbImagem = new javax.swing.JLabel();
        btVendedor = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelTitulo.setBackground(new java.awt.Color(51, 141, 252));
        panelTitulo.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lbTitulo.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        lbTitulo.setForeground(new java.awt.Color(255, 255, 255));
        lbTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbTitulo.setText("Formulario de Vendas");

        javax.swing.GroupLayout panelTituloLayout = new javax.swing.GroupLayout(panelTitulo);
        panelTitulo.setLayout(panelTituloLayout);
        panelTituloLayout.setHorizontalGroup(
            panelTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTituloLayout.createSequentialGroup()
                .addGap(367, 367, 367)
                .addComponent(lbTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(346, Short.MAX_VALUE))
        );
        panelTituloLayout.setVerticalGroup(
            panelTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTituloLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbTitulo)
                .addContainerGap())
        );

        jPanel1.add(panelTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 2, 1248, 70));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados Gerais", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 24), new java.awt.Color(0, 153, 255))); // NOI18N
        jPanel5.setToolTipText("Buscar um Cliente");
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel8.setText("Cliente:");
        jPanel5.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 59, -1));

        jtCliente.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jtCliente.setText("Cliente Geral");
        jtCliente.setFocusable(false);
        jPanel5.add(jtCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 40, 200, 29));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel9.setText("Pedido Nº.:");
        jPanel5.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 100, 30));

        btCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/pesquisar.png"))); // NOI18N
        btCliente.setToolTipText("Pequisar um Cliente");
        btCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btClienteActionPerformed(evt);
            }
        });
        jPanel5.add(btCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 40, 31, 29));

        lbMesa.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lbMesa.setText("Mesa:");
        jPanel5.add(lbMesa, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 90, 30));

        jtNPedido.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jtNPedido.setFocusable(false);
        jPanel5.add(jtNPedido, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 80, 230, 29));

        jtMesa.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jtMesa.setFocusable(false);
        jtMesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtMesaActionPerformed(evt);
            }
        });
        jPanel5.add(jtMesa, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 160, 230, 30));

        jtVendedor.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jtVendedor.setFocusable(false);
        jtVendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtVendedorActionPerformed(evt);
            }
        });
        jPanel5.add(jtVendedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 120, 230, 30));

        lbMesa1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lbMesa1.setText("Vendedor:");
        jPanel5.add(lbMesa1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 90, 30));

        jPanel1.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 80, 350, 200));

        panelProdutos.setBackground(new java.awt.Color(255, 255, 255));
        panelProdutos.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Lista de produtos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 24), new java.awt.Color(0, 153, 255))); // NOI18N

        tabela = new javax.swing.JTable(){
            public boolean isCellEditable(int a,int b){
                return false;
            }
        };
        tabela.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tabela);

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel9.setLayout(null);

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/pesquisa.png"))); // NOI18N
        jLabel4.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPanel9.add(jLabel4);
        jLabel4.setBounds(0, 0, 30, 26);

        jtPesquisar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtPesquisar.setForeground(new java.awt.Color(102, 102, 102));
        jtPesquisar.setText("Pesquisar um prato por nome, codigo , classe ");
        jtPesquisar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jtPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtPesquisarActionPerformed(evt);
            }
        });
        jtPesquisar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtPesquisarFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtPesquisarFocusLost(evt);
            }
        });
        jtPesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtPesquisarKeyReleased(evt);
            }
        });
        jPanel9.add(jtPesquisar);
        jtPesquisar.setBounds(30, 6, 330, 20);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel6.setText("Qtd:");

        jtQtd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        btRegistarPedido.setBackground(java.awt.Color.white);
        btRegistarPedido.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/nova.png"))); // NOI18N
        btRegistarPedido.setToolTipText("Registar um Pedido");
        btRegistarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRegistarPedidoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelProdutosLayout = new javax.swing.GroupLayout(panelProdutos);
        panelProdutos.setLayout(panelProdutosLayout);
        panelProdutosLayout.setHorizontalGroup(
            panelProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelProdutosLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(panelProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelProdutosLayout.createSequentialGroup()
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(jLabel6)
                        .addGap(4, 4, 4)
                        .addComponent(jtQtd, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(btRegistarPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        panelProdutosLayout.setVerticalGroup(
            panelProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelProdutosLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(panelProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelProdutosLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(panelProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtQtd, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btRegistarPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(10, 10, 10)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel1.add(panelProdutos, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 292, 610, 360));

        tabelaVenda = new javax.swing.JTable(){
            public boolean isCellEditable(int a,int b){
                return false;
            }
        };
        tabelaVenda.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        tabelaVenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tabelaVenda);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 90, 390, 470));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jtPrecoTotal.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        jtPrecoTotal.setForeground(new java.awt.Color(0, 153, 255));
        jtPrecoTotal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jtPrecoTotal.setText("MZN 1000.00");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtPrecoTotal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtPrecoTotal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 600, 390, -1));

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btGravarPedido.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btGravarPedido.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/salvar.png"))); // NOI18N
        btGravarPedido.setText("Gravar");
        btGravarPedido.setToolTipText("Clique aqui para gravar um Pedido ");
        btGravarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGravarPedidoActionPerformed(evt);
            }
        });

        btCalculadora.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btCalculadora.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/calculadora.png"))); // NOI18N
        btCalculadora.setText("Calculadora");
        btCalculadora.setToolTipText("Clique aqui para remover um produto");
        btCalculadora.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btCalculadora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCalculadoraActionPerformed(evt);
            }
        });

        btVoltar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btVoltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/mesaVazia.png"))); // NOI18N
        btVoltar.setText("Mesas");
        btVoltar.setToolTipText("Clique aqui para sair do  painel");
        btVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVoltarActionPerformed(evt);
            }
        });

        btRemoverPedido.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btRemoverPedido.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Delete.png"))); // NOI18N
        btRemoverPedido.setText("Remover");
        btRemoverPedido.setToolTipText("Clique aqui para remover um produto");
        btRemoverPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRemoverPedidoActionPerformed(evt);
            }
        });

        btRemoverTodos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btRemoverTodos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Waste.png"))); // NOI18N
        btRemoverTodos.setText("Remover todos");
        btRemoverTodos.setToolTipText("Clique aqui para cancelar o pedido");
        btRemoverTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRemoverTodosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btGravarPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(btCalculadora, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(btRemoverPedido, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                        .addComponent(btRemoverTodos, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(btVoltar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(btGravarPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btCalculadora, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btRemoverPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btRemoverTodos, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 90, 180, 560));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lbImagem.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbImagem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/semImagem.jpg"))); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbImagem, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbImagem, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, -1));

        btVendedor.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        btVendedor.setText("Imprimir Meu Relatório");
        btVendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVendedorActionPerformed(evt);
            }
        });
        jPanel1.add(btVendedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 560, 390, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btClienteActionPerformed
        FormularioReservas.reserva = null;
        new ListaClientes().setVisible(true);
    }//GEN-LAST:event_btClienteActionPerformed

    private void jtMesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtMesaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtMesaActionPerformed

    private void jtPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtPesquisarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtPesquisarActionPerformed

    private void jtPesquisarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtPesquisarFocusGained
        jtPesquisar.setText("");
        jtPesquisar.setForeground(Color.BLACK);
    }//GEN-LAST:event_jtPesquisarFocusGained

    private void jtPesquisarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtPesquisarFocusLost
        jtPesquisar.setText("Pesquisar um prato por nome ou codigo");
        corPesquisar();
    }//GEN-LAST:event_jtPesquisarFocusLost

    private void jtPesquisarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtPesquisarKeyReleased
        pesquisarPrato(jtPesquisar.getText(), obc.buscaProduto(), new ArrayList());
    }//GEN-LAST:event_jtPesquisarKeyReleased

    private void btRegistarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRegistarPedidoActionPerformed
        listarIntens(tabela.getSelectedRow());
    }//GEN-LAST:event_btRegistarPedidoActionPerformed

    private void btGravarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGravarPedidoActionPerformed
        if(!jtVendedor.getText().equalsIgnoreCase("root")){
            gravarVenda();
            codigoPedido();
            cancelarPedidos();
        }else{
            JOptionPane.showMessageDialog(null,"Nao eh possivel efectuar vendas com Vendedor root, Cadastre usuarios e faca o restart","Messagem",2);
        }
    }//GEN-LAST:event_btGravarPedidoActionPerformed

    private void btCalculadoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCalculadoraActionPerformed
        try {
            Runtime.getRuntime().exec("calc");
        } catch (IOException ex) {
            Logger.getLogger(MenuPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btCalculadoraActionPerformed

    private void btVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVoltarActionPerformed
        if (tabelaVenda.getRowCount() != 0) {
            int i = JOptionPane.showConfirmDialog(null, "Deseja cancelar o pedido?");
            if (i == JOptionPane.OK_OPTION) {
                MenuPrincipal.panelComponentes.removeAll();
                MenuPrincipal.panelComponentes.add(new PainelMesa());
            }
        } else {
            MenuPrincipal.panelComponentes.removeAll();
            MenuPrincipal.panelComponentes.add(new PainelMesa());
        }
    }//GEN-LAST:event_btVoltarActionPerformed

    private void btRemoverPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRemoverPedidoActionPerformed
        decrementar();
    }//GEN-LAST:event_btRemoverPedidoActionPerformed

    private void btRemoverTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRemoverTodosActionPerformed
        cancelarPedidos();
    }//GEN-LAST:event_btRemoverTodosActionPerformed

    private void jtVendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtVendedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtVendedorActionPerformed

    private void btVendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVendedorActionPerformed
     if(!jtVendedor.getText().equals("root")){   
        String url = "jdbc:mysql://localhost:3306/restaurante?zeroDateTimeBehavior=convertToNull";
        InputStream icon =ij.getArquivo("/Imagens/images.jpg");   
        String s=lbData.getText();
        String[]nome=s.split(": ");
        String data=""+nome[nome.length-1];
        try {
            Connection c = (Connection) DriverManager.getConnection(url, "root", "");
            String caminho = "/Faturas/RelatorioPorVendedor.jasper";
            Map mapa = new HashMap();
            mapa.put("Image",icon);
            mapa.put("data",data);
            mapa.put("Funcionario",jtVendedor.getText());
            mapa.put("Total",totalVendas(obc.buscaItens()));
            JasperPrint inf = JasperFillManager.fillReport(ij.getArquivo(caminho), mapa, c);
            JasperViewer visor = new JasperViewer(inf, false);
            visor.setTitle("Fatura");
            visor.setLocationRelativeTo(null);
            visor.setVisible(true);
            visor.setBounds(0, 0, 1365, 800);
            visor.getModalExclusionType();
        } catch (SQLException | JRException e) {
            JOptionPane.showMessageDialog(null, "Erro ao Gerar a Fatura");
        }
     }else{JOptionPane.showMessageDialog(null, "O vendedor root nao pode Imprimir Relatorio,Cadastre usuarios e facao restart");}
    }//GEN-LAST:event_btVendedorActionPerformed

    private String totalVendas(List<Itens_Produtos>itens) {
        double t = 0;
        String s=lbData.getText();
        String[]nome=s.split(": ");
        String data=""+nome[nome.length-1];
        for (int i = 0; i < itens.size(); i++) {
            Itens_Produtos it = itens.get(i);
            if(data.equals(d.format(it.getPedidos().getData()))&&(it.getPedidos().getFunc().getNome().equals(jtVendedor.getText()))&& it.getPedidos().getEstadoVenda().equals("Pago")){
                t+=it.getPrecoTotal();
            }  
            
        }
        return String.valueOf(f.format(t));
    }
     private SimpleDateFormat d = new SimpleDateFormat("dd/MM/yyyy");
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton btCalculadora;
    public static javax.swing.JButton btCliente;
    public static javax.swing.JButton btGravarPedido;
    private javax.swing.JButton btRegistarPedido;
    private javax.swing.JButton btRemoverPedido;
    private javax.swing.JButton btRemoverTodos;
    private javax.swing.JButton btVendedor;
    private javax.swing.JButton btVoltar;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public static javax.swing.JTextField jtCliente;
    public static javax.swing.JTextField jtMesa;
    public static javax.swing.JTextField jtNPedido;
    private javax.swing.JTextField jtPesquisar;
    public static javax.swing.JLabel jtPrecoTotal;
    private javax.swing.JSpinner jtQtd;
    public static javax.swing.JTextField jtVendedor;
    private javax.swing.JLabel lbImagem;
    public static javax.swing.JLabel lbMesa;
    public static javax.swing.JLabel lbMesa1;
    private javax.swing.JLabel lbTitulo;
    private javax.swing.JPanel panelProdutos;
    private javax.swing.JPanel panelTitulo;
    private javax.swing.JTable tabela;
    public static javax.swing.JTable tabelaVenda;
    // End of variables declaration//GEN-END:variables

    public void listarNaTabela(List<Produtos> pro) {
        controlaLinhas();
        if (!pro.isEmpty()) {
            for (int i = 0; i < pro.size(); i++) {
                Produtos p=pro.get(i);
                if(p.getEstado().equals("Ativo")) 
                modelo.addRow(new Object[]{p.getCodProd(), p.getNomeProd(), p.getPreco()});
            }
        }
    }

    private void codigoPedido() {
        String cod = "";
        int codigo = 0;
        for (int i = 1; i <= obc.buscaPedidos().size() + 1; i++) {
            codigo = i;
            String tamanho = "" + codigo;
            cod = this.codigo.substring(0, this.codigo.length() - tamanho.length());
        }
        jtNPedido.setText(String.valueOf(cod + codigo));
    }

    private void tabelaProdutos() {

        tabela.setModel(modelo);
        listarNaTabela(obc.buscaProduto());
        tabela.addMouseListener(new MouseAdapter() {
            public void mousePressed(MouseEvent e) {
                int codigo = tabela.getSelectedRow();
                if(codigo!=-1){
                    String nome = String.valueOf(tabela.getValueAt(codigo, 1));
                    double preco = Double.parseDouble(String.valueOf(tabela.getValueAt(codigo, 2)));
                    listaProdutos(obc.buscaProduto(), nome);
                }
            }

            private void listaProdutos(List<Produtos> pro, String nome) {
                boolean encontrou=false;String f="";
                for (int i = 0; i < obc.buscaProduto().size(); i++) {
                    Produtos nome2 = pro.get(i);
                    if (nome.equals(nome2.getNomeProd()) && !nome2.getFoto().equals("")) {
                        encontrou=true;
                        f=nome2.getFoto();
                    }
                }
                
                if (encontrou) {
                        ImageIcon imagem = new ImageIcon(f);
                        Image img = imagem.getImage();
                        Image newimg = img.getScaledInstance(250, 185, Image.SCALE_SMOOTH);
                        ImageIcon imagem2 = new ImageIcon(newimg);
                        lbImagem.setIcon(imagem2);
                    } else {
                        ImageIcon imagem = new ImageIcon(ij.getImageIcon("/Imagens/semImagem.jpg").getImage());
                        Image img = imagem.getImage();
                        Image newimg = img.getScaledInstance(200, 40, Image.SCALE_SMOOTH);
                        ImageIcon imagem2 = new ImageIcon(newimg);
                        lbImagem.setIcon(imagem2);
                }
            }

        });
    }

    private void cancelarPedidos() {
        for (int i = tabelaVenda.getRowCount() - 1; i >= 0; i--) {
            modeloPedido.removeRow(i);
        }
        somar();
    }

    public void somar() {
        double pTotal = 0;
        if (tabelaVenda.getRowCount() >= 0) {
            for (int i = 0; i < tabelaVenda.getRowCount(); i++) {
                double p = (Double) tabelaVenda.getValueAt(i, 2);
                pTotal += p;
            }
            jtPrecoTotal.setText(String.valueOf(f.format(pTotal)));
        }
    }

    public void decrementar() {
        double pTotal = 0;
        int codigo = tabelaVenda.getSelectedRow();
        if (codigo == -1) {
            JOptionPane.showMessageDialog(null, "Selecione o Produto que deseja remover", "Mesagem", 2);
        } else {
            double pt = (Double) modeloPedido.getValueAt(codigo, 2);
            if (tabelaVenda.getRowCount() >= 0) {
                for (int i = 0; i < tabelaVenda.getRowCount(); i++) {
                    double p = (Double) tabelaVenda.getValueAt(i, 2);
                    pTotal += p;
                }
                modeloPedido.removeRow(codigo);
                pTotal -= pt;
                jtPrecoTotal.setText(String.valueOf(f.format(pTotal)));
            }
        }
    }

    private void listarIntens(int codigo) {
        if (codigo != -1) {
            String nome = String.valueOf(tabela.getValueAt(codigo, 1));
            double preco = Double.parseDouble(String.valueOf(tabela.getValueAt(codigo, 2)));
            int qtd = (int) jtQtd.getValue();

            if (tabelaVenda.getRowCount() >= 0) {
                for (int i = 0; i < tabelaVenda.getRowCount(); i++) {
                    String nome2 = (String) tabelaVenda.getValueAt(i, 1);
                    int q = (int) tabelaVenda.getValueAt(i, 0);
                    if (nome.equals(nome2)) {
                        tabelaVenda.setValueAt(q + qtd, i, 0);
                        tabelaVenda.setValueAt((q + qtd) * preco, i, 2);
                        somar();
                        return;
                    }
                }

                modeloPedido.addRow(new Object[]{qtd, nome, preco * qtd});
                somar();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Err0!!!,Selecione um Produto Porfavor", "Messagem", 0);
        }
    }

    private void gravarVenda() {
        if (btGravarPedido.getText().equalsIgnoreCase("gravar")) {
            vendaGravar();
        } else {
            vendaCobrar();
        }
    }

    private Clientes cliente(String t, List<Clientes> cli) {
        Clientes c = null;
        boolean encontrou = false;
        for (int i = 0; i < cli.size(); i++) {
            if (cli.get(i).getNomeCli().equals(t)) {
                c = cli.get(i);
                encontrou = true;
                break;
            }
        }

        if (encontrou) {
            return c;
        } else {
            return new Clientes(t);
        }
    }

    private Mesas mesa(String t, List<Mesas> ut) {
        Mesas mesa = null;
        for (int i = 1; i < ut.size() + 1; i++) {
            Mesas mesas = ut.get(i - 1);
            if (mesas.getNomeMesa().equals(t)) {
                mesa = mesas;
                mesa.setEstado("Ocupado");
                mesa.setLugares(mesa.getLugares() - 1);
                if (mesa.getLugares() == 0) {
                    JOptionPane.showMessageDialog(null, "A Mesa esta Cheia!!!");
                    mesa.setEstado("Cheio");
                }
                obc.actualizar(mesa);
                break;
            }
            
        }
        return mesa;
    }

    private void adicionarItens(Compras pedido, List<Produtos> pro) {
        for (int i = 0; i < pro.size(); i++) {
            Produtos p = pro.get(i);
            for (int k = 0; k < tabelaVenda.getRowCount(); k++) {
                if (p.getNomeProd().equals((String) tabelaVenda.getValueAt(k, 1))) {
                    Itens_Produtos ip = new Itens_Produtos(pedido, p, (int) tabelaVenda.getValueAt(k, 0), (double) tabelaVenda.getValueAt(k, 2));
                    obc.salvar(ip);
                }
            }
        }
    }//fim de adicionar itens

    private void pesquisarPrato(String n, List<Produtos> pro, ArrayList<Produtos> p) {
        for (int i = 0; i < pro.size(); i++) {
            Produtos produto = pro.get(i);
            if (produto.getNomeProd().toLowerCase().startsWith(n) || String.valueOf(produto.getCodProd()).startsWith(n) || String.valueOf(produto.getCateg().getNomeCategoria()).toLowerCase().startsWith(n)) {
                p.add(produto);
            }
        }
        listarPratosPesquisados(p);
    }

    private void listarPratosPesquisados(ArrayList<Produtos> p) {
        controlaLinhas();
        for (int i = 0; i < p.size(); i++) {
            Produtos pro = p.get(i);
            modelo.addRow(new Object[]{pro.getCodProd(), pro.getNomeProd(), pro.getPreco()});
        }
    }

    private void chamaTodosMetodos() {
        tabelaVenda.setModel(modeloPedido);
        jtQtd.setValue(1);
        somar();
        codigoPedido();
        tabelaProdutos();
        tabelaVenda.setModel(modeloPedido);
        tabelaVenda.setShowGrid(false);
        tabela.getColumnModel().getColumn(0).setPreferredWidth(35);
        tabela.getColumnModel().getColumn(1).setPreferredWidth(300);
        tabela.getColumnModel().getColumn(2).setPreferredWidth(40);
        tabelaVenda.getColumnModel().getColumn(0).setPreferredWidth(50);
        tabelaVenda.getColumnModel().getColumn(1).setPreferredWidth(300);

        btGravarPedido.setVerticalTextPosition(SwingConstants.BOTTOM);
        btGravarPedido.setHorizontalTextPosition(SwingConstants.CENTER);
        btRemoverPedido.setVerticalTextPosition(SwingConstants.BOTTOM);
        btRemoverPedido.setHorizontalTextPosition(SwingConstants.CENTER);
        btCalculadora.setVerticalTextPosition(SwingConstants.BOTTOM);
        btCalculadora.setHorizontalTextPosition(SwingConstants.CENTER);
        btVoltar.setVerticalTextPosition(SwingConstants.BOTTOM);
        btVoltar.setHorizontalTextPosition(SwingConstants.CENTER);
        btRemoverTodos.setVerticalTextPosition(SwingConstants.BOTTOM);
        btRemoverTodos.setHorizontalTextPosition(SwingConstants.CENTER);
    }

    private void controlaLinhas() {
        while (modelo.getRowCount() > 0) {
            modelo.removeRow(0);
        }
    }

    private void corPesquisar() {
        jtPesquisar.setForeground(new Color(204, 204, 204));
    }

    private void verificaSeEstaCheio(List<Mesas> buscaMesas, String mesa) {
        for (int i = 1; i < buscaMesas.size() + 1; i++) {
            Mesas bMesas = buscaMesas.get(i - 1);
            if (bMesas.getNomeMesa().equalsIgnoreCase(mesa) && bMesas.getEstado().equalsIgnoreCase("Cheio")) {
                panelComponentes.removeAll();
                panelComponentes.add(new PainelMesa());
                panelComponentes.validate();
                break;
            }
        }
    }

    private void vendaGravar() {
        if (tabelaVenda.getRowCount() <= 0) {
            JOptionPane.showMessageDialog(null, "Nao Pode " + btGravarPedido.getText() + " sem registar os produtos", "Messagem", 0);
        } else {
            Compras pedido = new Compras(jtNPedido.getText(), new Date(), cliente(jtCliente.getText(), obc.buscaClientess()), "Pendente", mesa(jtMesa.getText(), obc.buscaMesas()), jtPrecoTotal.getText(),vendedor(jtVendedor.getText(),obc.buscaFunc()));
            adicionarItens(pedido, obc.buscaProduto());
            JOptionPane.showMessageDialog(null, "Salvado com Sucesso", "Messagem", 1, new ImageIcon(ij.getImageIcon("/Imagens/salvar.png").getImage()));
            verificaSeEstaCheio(obc.buscaMesas(), jtMesa.getText());
        }
    }

    private void vendaCobrar() {
        if (tabelaVenda.getRowCount() <= 0) {
            JOptionPane.showMessageDialog(null, "Nao Pode " + btGravarPedido.getText() + " sem registar os produtos", "Messagem", 2);
        } else {
            Compras pedido = new Compras(jtNPedido.getText(), new Date(), cliente(jtCliente.getText(), obc.buscaClientess()), "Pago", jtPrecoTotal.getText(),vendedor(jtVendedor.getText(),obc.buscaFunc()));
            adicionarItens(pedido, obc.buscaProduto());
            JOptionPane.showMessageDialog(null, "Cobranca Efetuada com Sucesso", "Messagem", 1, new ImageIcon(ij.getImageIcon("/Imagens/salvar.png").getImage()));
            imprimirFatura();
        }
    }

    private void imprimirFatura() {
        int k = JOptionPane.showConfirmDialog(null, "Deseja Imprimir a Factura?", "Messagem", JOptionPane.OK_CANCEL_OPTION);
        if (k == JOptionPane.OK_OPTION) {
            InputStream icon =ij.getArquivo("/Imagens/images.jpg");       
            String url = "jdbc:mysql://localhost:3306/restaurante?zeroDateTimeBehavior=convertToNull";
            try {
                Connection c = (Connection) DriverManager.getConnection(url, "root", "");
                String caminho = "/Faturas/ICMFaturaSemCliente.jasper";
                Map mapa = new HashMap();
                mapa.put("codVenda",jtNPedido.getText());
                mapa.put("IMAGEM",icon);
                JasperPrint inf = JasperFillManager.fillReport(ij.getArquivo(caminho), mapa, c);
                JasperViewer visor = new JasperViewer(inf, false);
                visor.setTitle("Fatura");
                visor.setBounds(0, 0, 1365, 800);
                visor.setVisible(true);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao Gerar a Fatura");
            }
        }
    }

    private Funcionarios vendedor(String vdr, List<Funcionarios> func) {
        Funcionarios funcionario = null;boolean find=false;
        for (Funcionarios funcionarios : func) {
            if(funcionarios.getNome().endsWith(vdr)){
                find=true;funcionario=funcionarios;break;
            }
        }
        
        if (find) {
            return funcionario;
        }else{return null;}
    }

    private String retornaVendedor(List<Usuarios> buscaUtilizador, String text) {
        String[] nome = text.split(": ");
        Usuarios usu = null;
        boolean find = false;
        for (int i = 0; i < buscaUtilizador.size(); i++) {
            Usuarios get = buscaUtilizador.get(i);
            if (get.getUtilizador().equals(nome[nome.length - 1])) {
                find = true;
                usu = get;
                break;

            }
        }
        if (find) {
            return usu.getFunc().getNome();
        } else {
            return "root";
        }
    }

}
