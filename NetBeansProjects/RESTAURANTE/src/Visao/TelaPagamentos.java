package Visao;

import Controle.CRUD;
import Controle.ImagemJar;
import Modelo.Compras;
import Modelo.Itens_Produtos;
import Modelo.Mesas;
import Modelo.Usuarios;
import static Visao.MenuPrincipal.lbUsuario;
import static Visao.MenuPrincipal.panelComponentes;
import static Visao.PainelMesa.btk;
import com.mysql.jdbc.Connection;
import java.io.IOException;
import java.io.InputStream;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.text.NumberFormat;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Rodrigues
 */
public final class TelaPagamentos extends javax.swing.JPanel {

    /**
     * Creates new form TelaPagamentos
     */
    DefaultTableModel modeloPedidos = new DefaultTableModel(new String[]{"Descrição", "Qtd", "Total"}, 0);
    CRUD obc = new CRUD();
    Compras compras = new Compras();
    ImagemJar ij = new ImagemJar();
    NumberFormat f = NumberFormat.getCurrencyInstance(new Locale("Portuguese", "MZ"));
    private String retornaVendedor(List<Usuarios> buscaUtilizador, String text) {
        String[] nome = text.split(": ");
        Usuarios usu = null;
        boolean find = false;
        for (int i = 0; i < buscaUtilizador.size(); i++) {
            Usuarios get = buscaUtilizador.get(i);
            if (get.getUtilizador().equals(nome[nome.length - 1])) {
                find = true;
                usu = get;
                break;

            }
        }
        if (find) {
            return usu.getFunc().getNome();
        } else {
            return "root";
        }
    }
    public TelaPagamentos() {
        initComponents();
        tabelaPedidos();
        configurarBotoes();
        jtVendedor.setText(retornaVendedor(obc.buscaUtilizador(),lbUsuario.getText())); 
        jtMesa.setText(btk);
        Total();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painelPrincipal = new javax.swing.JPanel();
        painelTitulo = new javax.swing.JPanel();
        lbTitulo = new javax.swing.JLabel();
        painelBotoes = new javax.swing.JPanel();
        btPagar = new javax.swing.JButton();
        btCalculadora = new javax.swing.JButton();
        btSair = new javax.swing.JButton();
        btRecibo = new javax.swing.JButton();
        painelTabela = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaPagamentos = new javax.swing.JTable();
        Buscar = new javax.swing.JButton();
        jtPed = new javax.swing.JComboBox<>();
        lbTotal1 = new javax.swing.JLabel();
        jtTotal = new javax.swing.JTextField();
        painelComponentes = new javax.swing.JPanel();
        jtMesa = new javax.swing.JTextField();
        lbNome3 = new javax.swing.JLabel();
        lbNome4 = new javax.swing.JLabel();
        jtEstadoPedido = new javax.swing.JTextField();
        lbNome5 = new javax.swing.JLabel();
        jtCliente = new javax.swing.JTextField();
        jtVendedor = new javax.swing.JTextField();
        lbNome6 = new javax.swing.JLabel();

        painelPrincipal.setBackground(new java.awt.Color(255, 255, 255));

        painelTitulo.setBackground(new java.awt.Color(51, 141, 252));
        painelTitulo.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lbTitulo.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        lbTitulo.setForeground(new java.awt.Color(255, 255, 255));
        lbTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbTitulo.setText("Tela de Pagamentos");

        javax.swing.GroupLayout painelTituloLayout = new javax.swing.GroupLayout(painelTitulo);
        painelTitulo.setLayout(painelTituloLayout);
        painelTituloLayout.setHorizontalGroup(
            painelTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelTituloLayout.createSequentialGroup()
                .addGap(403, 403, 403)
                .addComponent(lbTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(378, Short.MAX_VALUE))
        );
        painelTituloLayout.setVerticalGroup(
            painelTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelTituloLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbTitulo)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        painelBotoes.setBackground(new java.awt.Color(255, 255, 255));
        painelBotoes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btPagar.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btPagar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Wallet.png"))); // NOI18N
        btPagar.setText("FECHAR CONTA");
        btPagar.setToolTipText("");
        btPagar.setBorderPainted(false);
        btPagar.setContentAreaFilled(false);
        btPagar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        btPagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPagarActionPerformed(evt);
            }
        });

        btCalculadora.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btCalculadora.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/calculadora.png"))); // NOI18N
        btCalculadora.setText("CALCULADORA");
        btCalculadora.setBorderPainted(false);
        btCalculadora.setContentAreaFilled(false);
        btCalculadora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCalculadoraActionPerformed(evt);
            }
        });

        btSair.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/mesaVazia.png"))); // NOI18N
        btSair.setText("MESAS");
        btSair.setBorderPainted(false);
        btSair.setContentAreaFilled(false);
        btSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSairActionPerformed(evt);
            }
        });

        btRecibo.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btRecibo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Delete.png"))); // NOI18N
        btRecibo.setText("CANCELAR");
        btRecibo.setToolTipText("PEDIDO");
        btRecibo.setBorderPainted(false);
        btRecibo.setContentAreaFilled(false);
        btRecibo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btReciboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelBotoesLayout = new javax.swing.GroupLayout(painelBotoes);
        painelBotoes.setLayout(painelBotoesLayout);
        painelBotoesLayout.setHorizontalGroup(
            painelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btPagar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(btRecibo, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(btCalculadora, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(btSair, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        painelBotoesLayout.setVerticalGroup(
            painelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelBotoesLayout.createSequentialGroup()
                .addComponent(btPagar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(btRecibo, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(btCalculadora, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(btSair, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        painelTabela.setBackground(new java.awt.Color(255, 255, 255));
        painelTabela.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Detalhes do Pedido", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 24), new java.awt.Color(0, 153, 255))); // NOI18N

        tabelaPagamentos = new javax.swing.JTable(){
            public boolean isCellEditable(int a,int b){
                return false;
            }
        };
        tabelaPagamentos.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tabelaPagamentos.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        tabelaPagamentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tabelaPagamentos.setShowHorizontalLines(false);
        tabelaPagamentos.setShowVerticalLines(false);
        tabelaPagamentos.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tabelaPagamentos);

        Buscar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/pesquisar.png"))); // NOI18N
        Buscar.setToolTipText("Pesquisar Pedidos");
        Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarActionPerformed(evt);
            }
        });

        jtPed.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jtPed.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jtPedItemStateChanged(evt);
            }
        });

        lbTotal1.setFont(new java.awt.Font("Times New Roman", 1, 30)); // NOI18N
        lbTotal1.setText("TOTAL:");

        jtTotal.setFont(new java.awt.Font("Times New Roman", 0, 30)); // NOI18N
        jtTotal.setForeground(new java.awt.Color(0, 153, 255));
        jtTotal.setFocusable(false);

        javax.swing.GroupLayout painelTabelaLayout = new javax.swing.GroupLayout(painelTabela);
        painelTabela.setLayout(painelTabelaLayout);
        painelTabelaLayout.setHorizontalGroup(
            painelTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelTabelaLayout.createSequentialGroup()
                .addGroup(painelTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelTabelaLayout.createSequentialGroup()
                        .addGap(734, 734, 734)
                        .addComponent(jtPed, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(Buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(painelTabelaLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 930, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(painelTabelaLayout.createSequentialGroup()
                        .addGap(634, 634, 634)
                        .addComponent(lbTotal1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        painelTabelaLayout.setVerticalGroup(
            painelTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelTabelaLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(painelTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtPed, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(painelTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbTotal1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        painelComponentes.setBackground(new java.awt.Color(255, 255, 255));
        painelComponentes.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados do Pedido", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 24), new java.awt.Color(0, 153, 255))); // NOI18N
        painelComponentes.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        jtMesa.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jtMesa.setFocusable(false);
        jtMesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtMesaActionPerformed(evt);
            }
        });

        lbNome3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lbNome3.setText("MESA:");

        lbNome4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lbNome4.setText("CLIENTE:");

        jtEstadoPedido.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jtEstadoPedido.setFocusable(false);
        jtEstadoPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtEstadoPedidoActionPerformed(evt);
            }
        });

        lbNome5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lbNome5.setText("ESTADO:");

        jtCliente.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jtCliente.setFocusable(false);
        jtCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtClienteActionPerformed(evt);
            }
        });

        jtVendedor.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jtVendedor.setFocusable(false);
        jtVendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtVendedorActionPerformed(evt);
            }
        });

        lbNome6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lbNome6.setText("VENDEDOR:");

        javax.swing.GroupLayout painelComponentesLayout = new javax.swing.GroupLayout(painelComponentes);
        painelComponentes.setLayout(painelComponentesLayout);
        painelComponentesLayout.setHorizontalGroup(
            painelComponentesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelComponentesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbNome4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbNome6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbNome5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtEstadoPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbNome3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtMesa, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(84, 84, 84))
        );
        painelComponentesLayout.setVerticalGroup(
            painelComponentesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelComponentesLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(painelComponentesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbNome6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbNome5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtEstadoPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbNome3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtMesa, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbNome4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout painelPrincipalLayout = new javax.swing.GroupLayout(painelPrincipal);
        painelPrincipal.setLayout(painelPrincipalLayout);
        painelPrincipalLayout.setHorizontalGroup(
            painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(painelTabela, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(painelComponentes, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(32, 32, 32)
                .addComponent(painelBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelPrincipalLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(painelTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        painelPrincipalLayout.setVerticalGroup(
            painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelPrincipalLayout.createSequentialGroup()
                .addComponent(painelTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelPrincipalLayout.createSequentialGroup()
                        .addComponent(painelComponentes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(painelTabela, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(painelBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelPrincipal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btPagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPagarActionPerformed
        if (jtPed.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Selecione um pedido para efectuar pagamentos!!", "Messagem", 2);
        } else {
            conta(obc.buscaPedidos());
            jtPed.removeItem(jtPed.getSelectedItem());
        }
    }//GEN-LAST:event_btPagarActionPerformed

    private void btCalculadoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCalculadoraActionPerformed
        try {
            Runtime.getRuntime().exec("calc");
        } catch (IOException ex) {
            Logger.getLogger(TelaPagamentos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btCalculadoraActionPerformed

    private void btSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSairActionPerformed
        MenuPrincipal.panelComponentes.removeAll();
        MenuPrincipal.panelComponentes.add(new PainelMesa());
    }//GEN-LAST:event_btSairActionPerformed

    private void btReciboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btReciboActionPerformed
        if (jtPed.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Selecione o Pedido que deseja Cancelar", "Messagem", 0);
        } else {
            cancelarPedidos(jtPed.getSelectedItem().toString(), obc.buscaPedidos());
        }
    }//GEN-LAST:event_btReciboActionPerformed

    private void BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarActionPerformed
        if (jtPed.getItemCount() == 0) {
            listarCodigosPedidos(jtMesa.getText(), obc.buscaPedidos());
        }
    }//GEN-LAST:event_BuscarActionPerformed

    private void jtPedItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jtPedItemStateChanged
        if (jtPed.getSelectedItem() != null) {
            listarPedidos(jtPed.getSelectedItem().toString(), obc.buscaPedidos());
        } else {
            panelComponentes.removeAll();
            panelComponentes.add(new PainelMesa());
            panelComponentes.validate();
        }
    }//GEN-LAST:event_jtPedItemStateChanged

    private void jtMesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtMesaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtMesaActionPerformed

    private void jtEstadoPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtEstadoPedidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtEstadoPedidoActionPerformed

    private void jtClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtClienteActionPerformed

    private void jtVendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtVendedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtVendedorActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Buscar;
    private javax.swing.JButton btCalculadora;
    private javax.swing.JButton btPagar;
    private javax.swing.JButton btRecibo;
    private javax.swing.JButton btSair;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jtCliente;
    private javax.swing.JTextField jtEstadoPedido;
    public static javax.swing.JTextField jtMesa;
    private javax.swing.JComboBox<String> jtPed;
    private javax.swing.JTextField jtTotal;
    private javax.swing.JTextField jtVendedor;
    private javax.swing.JLabel lbNome3;
    private javax.swing.JLabel lbNome4;
    private javax.swing.JLabel lbNome5;
    private javax.swing.JLabel lbNome6;
    private javax.swing.JLabel lbTitulo;
    private javax.swing.JLabel lbTotal1;
    private javax.swing.JPanel painelBotoes;
    private javax.swing.JPanel painelComponentes;
    private javax.swing.JPanel painelPrincipal;
    private javax.swing.JPanel painelTabela;
    private javax.swing.JPanel painelTitulo;
    private javax.swing.JTable tabelaPagamentos;
    // End of variables declaration//GEN-END:variables

    private void listarCodigosPedidos(String text, List<Compras> pedido) {
        try {
            for (int i = 0; i < pedido.size(); i++) {
                Compras compra = pedido.get(i);
                if (compra.getEstadoVenda().equals("Pendente") && compra.getMesa().getNomeMesa().equals(text)) {
                    jtPed.addItem(compra.getCodigoVenda());
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Ups, algo deu Errad0,Contacte o Programador do sistema","Messagem",0);
        }

    }

    private void tabelaPedidos() {

        tabelaPagamentos.setModel(modeloPedidos);
        tabelaPagamentos.getColumnModel().getColumn(0).setPreferredWidth(600);
    }//fim de tabela Pedidos

    public void listarPedidos(String codigo, List<Compras> pedido) {
            for (int i = 0; i < pedido.size(); i++) {
                Compras ped = pedido.get(i);
                if (ped.getCodigoVenda().equals(codigo)) {
                    jtEstadoPedido.setText(ped.getEstadoVenda());
                    jtCliente.setText(ped.getClientes().getNomeCli());
                    compras = ped;
                    listarNaTabela(ped.getItens(), ped.getIdPedido());
                    Total();
                }
            }
    }

    public void Total() {
        double total = 0;
        for (int i = 0; i < tabelaPagamentos.getRowCount(); i++) {
            total += (Double) tabelaPagamentos.getValueAt(i, 2);
        }
        jtTotal.setText(String.valueOf(f.format(total)));
    }

    private void conta(List<Compras> buscaPedidos) {
        if (jtEstadoPedido.getText().equals("Pendente")) {
            compras.setEstadoVenda("Pago");
            obc.actualizar(compras);
            desOcupacaoMesas(jtMesa.getText(), obc.buscaMesas());
            int i = JOptionPane.showConfirmDialog(null, "Pagamento Concluido,Deseja Imprimir a Fatura?!!!", "Messagem", 2);
            if (i == JOptionPane.OK_OPTION) {
                facturaComCliente();
                jtEstadoPedido.setText(compras.getEstadoVenda());
            }
        }
    }

    private void listarNaTabela(List<Itens_Produtos> get, int codigo) {
        controlaLinhasDaTabela();
        for (int i = 0; i < get.size(); i++) {
            Itens_Produtos get1 = get.get(i);
            if (codigo == get1.getPedidos().getIdPedido()) {
                modeloPedidos.addRow(new Object[]{get1.getProdutos().getNomeProd(), get1.getQuantidade(), get1.getPrecoTotal()});
            }
        }
    }

    private int numeroPedidos(List<Compras> compras, String mesa) {
        int i = 0;
        for (Compras compra : compras) {
            if (compra.getEstadoVenda().equalsIgnoreCase("Pendente") && compra.getMesa().getNomeMesa().equalsIgnoreCase(mesa)) {
                i++;
            }
        }
        return i;
    }

    private void desOcupacaoMesas(String mesa, List<Mesas> buscaMesas) {
        for (int i = 0; i < buscaMesas.size(); i++) {
            Mesas mes = buscaMesas.get(i);
            if (mes.getNomeMesa().equals(mesa)) {
                if (numeroPedidos(obc.buscaPedidos(), mesa) == 0) {
                    mes.setEstado("Livre");
                    mes.setLugares(mes.getLugares() + 1);
                    obc.actualizar(mes);
                    JOptionPane.showMessageDialog(null,"Mesa Livre!","Messagem", 1);
                    panelComponentes.add(new PainelMesa());
                    panelComponentes.validate();
                    break;
                } else {
                    mes.setEstado("Ocupado");
                    mes.setLugares(mes.getLugares() + 1);
                    obc.actualizar(mes);
                    break;
                }
            }
        }
    }

    private void controlaLinhasDaTabela() {
        while (modeloPedidos.getRowCount() > 0) {
            modeloPedidos.removeRow(0);
        }
    }

    private void configurarBotoes() {
        btPagar.setVerticalTextPosition(SwingConstants.BOTTOM);
        btPagar.setHorizontalTextPosition(SwingConstants.CENTER);
        btCalculadora.setVerticalTextPosition(SwingConstants.BOTTOM);
        btCalculadora.setHorizontalTextPosition(SwingConstants.CENTER);
        btSair.setVerticalTextPosition(SwingConstants.BOTTOM);
        btSair.setHorizontalTextPosition(SwingConstants.CENTER);
        btRecibo.setVerticalTextPosition(SwingConstants.BOTTOM);
        btRecibo.setHorizontalTextPosition(SwingConstants.CENTER);
    }

    private void facturaComCliente() {
        String url = "jdbc:mysql://localhost:3306/restaurante?zeroDateTimeBehavior=convertToNull";
        InputStream icon =ij.getArquivo("/Imagens/images.jpg");       
        try {
            Connection c = (Connection) DriverManager.getConnection(url, "root", "");
            String caminho = "/Faturas/ICMFatura.jasper";
            Map mapa = new HashMap();
            mapa.put("codVenda", jtPed.getSelectedItem().toString());
            mapa.put("IMAGEM",icon);
            JasperPrint inf = JasperFillManager.fillReport(ij.getArquivo(caminho), mapa, c);
            JasperViewer visor = new JasperViewer(inf, false);
            visor.setTitle("Fatura");
            visor.setLocationRelativeTo(null);
            visor.setVisible(true);
            visor.setBounds(0, 0, 1365, 800);
            visor.getModalExclusionType();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao Gerar a Fatura");
        }
    }

    private void cancelarPedidos(String text, List<Compras> pedidos) {
        for (Compras pedido : pedidos) {
            if (pedido.getCodigoVenda().equals(text)) {
                int k = JOptionPane.showConfirmDialog(null, "deseja realmente cancelar o Pedido?", "Messagem", 2);
                if (k == JOptionPane.OK_OPTION) {
                    pedido.setEstadoVenda("Cancelado");
                    obc.actualizar(pedido);
                    desOcupacaoMesas(jtMesa.getText(), obc.buscaMesas());
                    JOptionPane.showMessageDialog(null, "Cancelado com Sucesso!!", "Messagem", 1);
                    jtPed.removeItem(jtPed.getSelectedItem());
                    break;
                }
            }
        }
    }

}
