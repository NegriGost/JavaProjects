/**
 * a Classe categoria de produtos e uma classe em o usuario,pode visualizar as
 * classes dos produtos .
 */
package Visao;

import Controle.ImagemJar;
import Controle.CRUD;
import Modelo.Categoria;
import static Visao.MenuPrincipal.panelComponentes;
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
//import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import static Visao.PainelProdutos.jtCategoria;
import java.awt.Component;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author Rodrigues
 */
public class CategoriaProduto extends javax.swing.JDialog {

    CRUD obc = new CRUD();
    DefaultTableModel modelo = new DefaultTableModel(new String[]{"ID", "Tipo de Produto"}, 0);
    ImagemJar ij = new ImagemJar();

    /**
     * Creates new form CategoriaBebida
     */
    public CategoriaProduto() {
        super(new JFrame(), true);
        initComponents();
        setLocationRelativeTo(null);
        tabelaCategoria.setModel(modelo);
        tabelaCategoria.getColumnModel().getColumn(1).setPreferredWidth(400);
        listarNaTabela(obc.buscaTipoProdutos());

        tabelaCategoria.addMouseListener(new MouseAdapter() {
            public void mousePressed(MouseEvent e) {
                int codigo = tabelaCategoria.getSelectedRow();
                jtNome.setText(String.valueOf(tabelaCategoria.getValueAt(codigo, 1)));
                lbErro.setText("");
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        panelDescricao = new javax.swing.JPanel();
        lbNome = new javax.swing.JLabel();
        jtNome = new javax.swing.JTextField();
        brSalvar = new javax.swing.JButton();
        btUpdate = new javax.swing.JButton();
        btExcluir = new javax.swing.JButton();
        panelTabela = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaCategoria = new javax.swing.JTable();
        lbErro = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jtPesquisar = new javax.swing.JTextField();
        panelTodosComponentes = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        panelDescricao.setBackground(new java.awt.Color(255, 255, 255));
        panelDescricao.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Agency FB", 0, 18))); // NOI18N
        panelDescricao.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbNome.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbNome.setText("Nome:");
        panelDescricao.add(lbNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, -1, 30));

        jtNome.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jtNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtNomeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtNomeKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtNomeKeyTyped(evt);
            }
        });
        panelDescricao.add(jtNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 10, 370, 29));

        brSalvar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        brSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/salvar.png"))); // NOI18N
        brSalvar.setText("Gravar");
        brSalvar.setBorderPainted(false);
        brSalvar.setContentAreaFilled(false);
        brSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brSalvarActionPerformed(evt);
            }
        });
        panelDescricao.add(brSalvar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 150, 40));

        btUpdate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/update2.png"))); // NOI18N
        btUpdate.setText("Atualizar");
        btUpdate.setBorderPainted(false);
        btUpdate.setContentAreaFilled(false);
        btUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btUpdateActionPerformed(evt);
            }
        });
        panelDescricao.add(btUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 50, 150, 40));

        btExcluir.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Delete.png"))); // NOI18N
        btExcluir.setText("Remover");
        btExcluir.setBorderPainted(false);
        btExcluir.setContentAreaFilled(false);
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });
        panelDescricao.add(btExcluir, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 50, 160, 40));

        panelTabela.setBackground(new java.awt.Color(255, 255, 255));
        panelTabela.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Lista de Categorias", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 20), new java.awt.Color(0, 153, 255))); // NOI18N
        panelTabela.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tabelaCategoria = new javax.swing.JTable(){
            public boolean isCellEditable(int a,int b){
                return false;
            }

            public Component prepareRenderer(TableCellRenderer renderer, int row, int column){
                Component returnComp = super.prepareRenderer(renderer, row, column);
                Color alternateColor = new Color(252,242,206);
                Color whiteColor = Color.WHITE;
                if (!returnComp.getBackground().equals(getSelectionBackground())){
                    Color bg = (row % 2 == 0 ? alternateColor : whiteColor);
                    returnComp .setBackground(bg);
                    bg = null;
                }
                return returnComp;
            }
        };
        tabelaCategoria.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        tabelaCategoria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tabelaCategoria);

        panelTabela.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 440, 210));

        lbErro.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        lbErro.setForeground(new java.awt.Color(255, 0, 0));
        panelTabela.add(lbErro, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, 460, 20));

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel6.setLayout(null);

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/pesquisa.png"))); // NOI18N
        jLabel3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPanel6.add(jLabel3);
        jLabel3.setBounds(0, 0, 30, 26);

        jtPesquisar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jtPesquisar.setForeground(new java.awt.Color(204, 204, 204));
        jtPesquisar.setText("Pesquisar Categoria por codigo ou nome");
        jtPesquisar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jtPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtPesquisarActionPerformed(evt);
            }
        });
        jtPesquisar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtPesquisarFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtPesquisarFocusLost(evt);
            }
        });
        jtPesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtPesquisarKeyReleased(evt);
            }
        });
        jPanel6.add(jtPesquisar);
        jtPesquisar.setBounds(30, 6, 320, 20);

        panelTabela.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 40, 360, 30));

        panelTodosComponentes.setBackground(new java.awt.Color(51, 141, 252));
        panelTodosComponentes.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 30)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Categorias de Produtos");

        javax.swing.GroupLayout panelTodosComponentesLayout = new javax.swing.GroupLayout(panelTodosComponentes);
        panelTodosComponentes.setLayout(panelTodosComponentesLayout);
        panelTodosComponentesLayout.setHorizontalGroup(
            panelTodosComponentesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTodosComponentesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(89, 89, 89))
        );
        panelTodosComponentesLayout.setVerticalGroup(
            panelTodosComponentesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTodosComponentesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelTodosComponentes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(panelTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(panelDescricao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(panelTodosComponentes, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(panelDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panelTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed
        removerNaTabela();
        atualizarPanelProdutos();
        listarNaTabela(obc.buscaTipoProdutos());
    }//GEN-LAST:event_btExcluirActionPerformed

    private void brSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brSalvarActionPerformed
        gravar();
        jtNome.setText("");
        atualizarPanelProdutos();
        listarNaTabela(obc.buscaTipoProdutos());
    }//GEN-LAST:event_brSalvarActionPerformed

    private void btUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btUpdateActionPerformed
        atualizarNaTabela();
        atualizarPanelProdutos();
        listarNaTabela(obc.buscaTipoProdutos());
    }//GEN-LAST:event_btUpdateActionPerformed

    private void jtPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtPesquisarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtPesquisarActionPerformed

    private void jtPesquisarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtPesquisarFocusGained
        jtPesquisar.setText("");
        jtPesquisar.setForeground(Color.BLACK);
    }//GEN-LAST:event_jtPesquisarFocusGained

    private void jtPesquisarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtPesquisarFocusLost
        jtPesquisar.setText("Pesquisar clientes por nome,apelido ou codigo");
        corPesquisar();
    }//GEN-LAST:event_jtPesquisarFocusLost

    private void jtPesquisarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtPesquisarKeyReleased
        pesquisarCategoriaProdutos(jtPesquisar.getText(), obc.buscaTipoProdutos(), new ArrayList<Categoria>());
    }//GEN-LAST:event_jtPesquisarKeyReleased

    private void jtNomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtNomeKeyPressed
        if (KeyEvent.VK_ENTER == evt.getKeyCode()) {
                gravar();
                categorias(obc.buscaTipoProdutos());
                atualizarPanelProdutos();
                listarNaTabela(obc.buscaTipoProdutos());
        }
    }//GEN-LAST:event_jtNomeKeyPressed

    private void jtNomeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtNomeKeyReleased

    }//GEN-LAST:event_jtNomeKeyReleased

    private void jtNomeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtNomeKeyTyped
//        char c = evt.getKeyChar();
//        if ((c < 'a' || c > 'z') && (c < 'A' | c > 'Z')&& (c > ' ')) {
//            evt.consume();
//        }
    }//GEN-LAST:event_jtNomeKeyTyped

    
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//         try{
//           //UIManager.setLookAndFeel("com.jtattoo.plaf.bernstein.BernsteinLookAndFeel");
//            // UIManager.setLookAndFeel("com.jtattoo.plaf.noire.NoireLookAndFeel");
//         //UIManager.setLookAndFeel("com.jtattoo.plaf.acryl.AcrylLookAndFeel");
//            //UIManager.setLookAndFeel("com.jtattoo.plaf.smart.SmartLookAndFeel");
//            //UIManager.setLookAndFeel("com.jtattoo.plaf.mcwin.McWinLookAndFeel");
//        }catch(Exception e){
//            e.getStackTrace();
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new CategoriaProduto().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton brSalvar;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btUpdate;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jtNome;
    private javax.swing.JTextField jtPesquisar;
    private javax.swing.JLabel lbErro;
    private javax.swing.JLabel lbNome;
    private javax.swing.JPanel panelDescricao;
    private javax.swing.JPanel panelTabela;
    private javax.swing.JPanel panelTodosComponentes;
    private javax.swing.JTable tabelaCategoria;
    // End of variables declaration//GEN-END:variables

    /**
     * Este metodo e responsavel por listar os dados na tabela do formulario
     */
    private void controlaLinhasDaTabela() {
        while (modelo.getRowCount() > 0) {
            modelo.removeRow(0);
        }
    }

    public final void listarNaTabela(List<Categoria> ut) {
        controlaLinhasDaTabela();
        if (!ut.isEmpty()) {
            for (int i = 0; i < ut.size(); i++) {
                modelo.addRow(new Object[]{ut.get(i).getCodCateg(), ut.get(i).getNomeCategoria()});
            }

        }

    }
//=========================================

    /**
     * Este metodo e responsavel por atualizar os dados na tabela do formulario
     */

    private static Image createFaviIcon(String fileName) {
        URL url = ImageIcon.class.getResource(fileName);
        Image faviIcon = Toolkit.getDefaultToolkit().getImage(url);
        return faviIcon;
    }

    public void atualizarNaTabela() {
        List<Categoria> ut = obc.buscaTipoProdutos();
        int codigo = tabelaCategoria.getSelectedRow();
        if (codigo == -1) {
            lbErro.setText("Selecione o Usuario que deseja Atualizar!!!");
        } else {
            String nome = (String) tabelaCategoria.getValueAt(codigo, 1);
            for (int i = 0; i < ut.size(); i++) {
                String nome2 = (String) tabelaCategoria.getValueAt(i, 1);
                if (nome.equals(nome2)) {
                    ut.get(i).setNomeCategoria(jtNome.getText());
                    obc.actualizar(ut.get(i));
                    JOptionPane.showMessageDialog(null, "Atualizado com Sucesso", "Messagem", 1, new ImageIcon(ij.getImageIcon("/Imagens/update2.png").getImage()));
                    break;
                }
            }
        }
    }

    //===========================================
    /**
     * Este metodo e responsavel por remover os dados na tabela do formulario
     */
    public void removerNaTabela() {
        List<Categoria> ut = obc.buscaTipoProdutos();
        int codigo = tabelaCategoria.getSelectedRow();
        if (codigo == -1) {
            lbErro.setText("Selecione o Usuario que deseja remover!!!");
        } else {
            String nome = (String) tabelaCategoria.getValueAt(codigo, 1);
            for (int i = 0; i < ut.size(); i++) {
                String nome2 = (String) tabelaCategoria.getValueAt(i, 1);
                if (nome.equals(nome2)) {

                    int j = JOptionPane.showConfirmDialog(null, "Deseja realmente Remover Este Usuario", "Messagem", 2);
                    if (j == JOptionPane.OK_OPTION) {
                        obc.excluir(ut.get(i));
                        JOptionPane.showMessageDialog(null, "Removido com Sucesso!!!", "Messagem", 1, new ImageIcon(ij.getImageIcon("/Imagens/Delete.png").getImage()));
                        break;
                    }

                }
            }
        }

    }

    /**
     * Este metodo e responsavel por gravar os dados na base de dados e
     * imprimilos na tabela do formulario chamando o metodo listarNaTabela
     */
    private void gravar() {
        boolean achou = false;

        if (jtNome.getText().equals("")) {
            lbErro.setText("Os Campos na podem estar vazios!!!");
        } else {
            List<Categoria> ut = obc.buscaTipoProdutos();
            for (int i = 0; i < ut.size(); i++) {
                if (ut.get(i).getNomeCategoria().equals(jtNome.getText())) {
                    achou = true;
                    break;
                }
            }

            if (achou) {
                lbErro.setText("Essa Categoria  ja foi Salva, Registe uma nova Categoria!!!");
            } else {
                Categoria tp = new Categoria(jtNome.getText());
                obc.salvar(tp);
                JOptionPane.showMessageDialog(null, "Salvado com Sucesso", "Messagem", 1, new ImageIcon(ij.getImageIcon("/Imagens/salvar.png").getImage()));
                lbErro.setText("");
            }
        }
    }//fim de gravar

    private void pesquisarCategoriaProdutos(String n, List<Categoria> cp, ArrayList<Categoria> p) {
        for (int i = 0; i < cp.size(); i++) {
            Categoria categoria = cp.get(i);
            if (categoria.getNomeCategoria().toLowerCase().startsWith(n) || String.valueOf(categoria.getCodCateg()).startsWith(n)) {
                p.add(categoria);
            }
        }
        listarClientesPesquisados(p);
    }

    private void listarClientesPesquisados(ArrayList<Categoria> m) {
        controlaLinhas();
        for (int i = 0; i < m.size(); i++) {
            Categoria c = m.get(i);
            modelo.addRow(new Object[]{c.getCodCateg(), c.getNomeCategoria()});
        }
    }

    private void controlaLinhas() {
        while (modelo.getRowCount() > 0) {
            modelo.removeRow(0);
        }
    }

    private void corPesquisar() {
        jtPesquisar.setForeground(new Color(204, 204, 204));
    }

    private void categorias(List<Categoria> tipoProdutos) {
        for (int i = 0; i < tipoProdutos.size(); i++) {
            Categoria pc = tipoProdutos.get(i);
            for (int j = 0; j < jtCategoria.getItemCount(); j++) {
                if (!pc.getNomeCategoria().equalsIgnoreCase(jtCategoria.getItemAt(j))) {
                    jtCategoria.addItem(pc.getNomeCategoria());
                    jtCategoria.validate();
                }
            }
        }
    }

    private void categoriasRemover(List<Categoria> tipoProdutos) {
        for (int i = 0; i < tipoProdutos.size(); i++) {
            Categoria pc = tipoProdutos.get(i);
            for (int j = 0; j < jtCategoria.getItemCount(); j++) {
                if (pc.getNomeCategoria().equalsIgnoreCase(jtCategoria.getItemAt(j))) {
                    jtCategoria.removeItemAt(j);
                }
            }
        }
    }

    private void atualizarPanelProdutos() {
        panelComponentes.removeAll();
        panelComponentes.add(new PainelProdutos());
        panelComponentes.validate();
    }

}
